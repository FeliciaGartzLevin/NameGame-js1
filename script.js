// I v√§rsta fall om allt skiter sig s√• f√•r jag g√∂ra en 
// HTML-lista med valda bilder d√§r det finns 4 radiobtns 
// som val p√• varje och en submit-knapp l√§ngst ner som 
// r√§knar ihop po√§ngen sen
//typ se Ninja Quiz

// FIXA ‚úÖ
// n√§r jag klickar p√• start-buttons (addeventlistener)
// s√• vill jag d√∂lja elementet start-game-btn-container 
// och visa image + answers+quit-buttons setAttribute('display=none/block')

// query the guess-buttons
const guessAllBtn = document.querySelector('#btn-guess-all');
const guessTenBtn = document.querySelector('#btn-guess-ten');
const guessTwentyBtn = document.querySelector('#btn-guess-twenty');
const startGameContainer = document.querySelector('#start-game-container');
const studentImage = document.querySelector('#student-image');
const answBtns = document.querySelectorAll('.answer-btns');
const quitBtn = document.querySelector('#quit-btn');
const answ1Btn = document.querySelector('#answ1');
const answ2Btn = document.querySelector('#answ2');
const answ3Btn = document.querySelector('#answ3');
const answ4Btn = document.querySelector('#answ4');
const answContainer = document.querySelector('.answers-container');

const showAnswBtnsWhenStart = () => {
    //g√∂r en funktion h√§r som jag kan kalla p√• f√∂r varje startklick (all, 10,20 val)
    startGameContainer.style = 'display: none';
    studentImage.style = 'display: block';
    answBtns.style = 'display: block';
    answBtns.forEach( answBtn => {
       return answBtn.style = 'display: block';
    }); 
    quitBtn.style = 'display: flex';
}

const shuffleArray = (array) => {
	for (let i = array.length - 1; i > 0; i--) {
		const j = Math.floor(Math.random() * (i + 1));
		const temp = array[i];
		array[i] = array[j];
		array[j] = temp;
	}
}

//cloning the students array into a new array
let allStudents = [...students];

shuffleArray(allStudents);
let i = 0;
let chosenStudents = 0;
// let gameOn = false;
const answBtnArray = [answ1Btn, answ2Btn, answ3Btn, answ4Btn];

// console.log(allStudents);

// kanske en while som omsluter all nedan kod som i guess the number 
// d√§r man g√∂r booleans f√∂r att avsluta och starta spel? 
// D√• leder quit button till "startsidan" med att v√§lja antal gissningar igen
//n√•gonting s√•nth√§r?:
/* const gameOn=true;
quitBtn.addEventListener('click', () => {
    gameOn=false;
}); */

//-------CLICK BUTTONS IN THE BEGINNING AND CHOOSE HOW MANY STUDENTS TO GUESS ON------

// M√•ste loopa √∂ver denna enligt vald m√§ngd gissningar
// p√• ng√•got s√§tt, men vill ju inte f√• hela loopen p√• samma 
// g√•ng utan klicka och v√§lja emellan
const setUpNewGuess = () => {
    shuffleArray(chosenStudents); //sluta shuffla denna och shift() 
                                  // bort [0] hela tiden tills img √§r slut
    shuffleArray(allStudents);                           
    //Setting the first chosen image and starting game
    studentImage.setAttribute('src', chosenStudents[0].image);

    shuffleArray(answBtnArray);
    //randomizing right answer button
    answBtnArray[0].innerHTML = `${chosenStudents[0].name}`;
    allStudents.filter( student => {
        return student.name !== chosenStudents[0].name
    });
    answBtnArray[1].innerHTML = `${allStudents[1].name}`;
    answBtnArray[2].innerHTML = `${allStudents[2].name}`;
    answBtnArray[3].innerHTML = `${allStudents[3].name}`;

    
// chosenStudents.map(student=> student.name); 
// skickar ut namnen i en array
          
}



//choose between ALL, 10 or 20 guesses
const clickToChooseAmountOfStudents = () => {

    guessAllBtn.addEventListener('click', () => {
        //v√§lj ALLA studenter ‚úÖ och starta spel
        chosenStudents = allStudents; 
        
        // //  //Setting the first chosen image and starting game
        //  setUpNewGuess();

        // //hide startGameContainer and show studentImage + all game buttons ‚úÖ
        // showAnswBtnsWhenStart();
        console.log('"All" is clicked');

        // gameOn = true;
        gameOnFunc();

        // f√•r ev forts√§tta hela spelet 
        // h√§r inne i respektive scope? 
        // Kan ta funktioner fr√•n utsidan 
        // och s√§tta in f√∂r att kunna anv√§nda 
        // chosenStudents nya v√§rde.
        // annars en callback funktion:
        // se weather app app.js renderCurrentWeather(data);
        // d√§r jag s√§tter in chosenStudent som parameter
        // typ setUpNewGuess(chosenStudents); kanske?
        
    });
    guessTenBtn.addEventListener('click', () => { // kan man skriva guessTenBtn.addEventListener('click', () => {}); och returnera v√§rdet fr√•n en if-sats ist?
        //slumpa 10 studenter och starta spel
            // slumpa med Fisher-Yates ‚úÖ
        chosenStudents = allStudents.slice(0,10); //slumpa ut 10 stycken and slice()? out the 10 first? eller borde finnas en annan metod .filter[0-9]? + .map(student.name) f√∂r att f√• ut namnen 

        //Setting the first chosen image and answBtns
        // setUpNewGuess();

        // //hide startGameContainer and show studentImage + all game buttons
        // showAnswBtnsWhenStart();
        console.log('"10" is clicked');

        // gameOn = true;
        gameOnFunc();
        
    });
    guessTwentyBtn.addEventListener('click', () => {
    //slumpa 20 bilder och starta spel
        // slumpa med Fisher-Yates
        chosenStudents = allStudents.slice(0,20); //slumpa ut 10 stycken
            
        //Setting the first chosen image and starting game
        // setUpNewGuess();
        //hide startGameContainer and show studentImage + all game buttons
        // showAnswBtnsWhenStart();
        console.log('"20" is clicked');

        gameOnFunc();
    });
}

clickToChooseAmountOfStudents();

// en funktion f√∂r 1 spelomg√•ng 
const gameOnFunc = () => {
    // while(quitGame === false){
        // gameOn = true;
        let totalGuesses = 0
        let rightGuesses = 0;
        
        // gameOn = true;
         // // Setting the first chosen image and starting game
        setUpNewGuess();
        // // hide startGameContainer and show studentImage + all game buttons
        showAnswBtnsWhenStart(); 
        // 
        // gameOn = true;
        // for(let totalGuesses = 0; totalGuesses < chosenStudents.length; totalGuesses++) { //for(let i = 0; i <= chosenStudents.length; i++){ //denna while vill jag ju loopa tills chosenStudents tar slut. ska det g√∂ras med en for-loop ist√§llet? forEach?
            // forEach se ovan        
                // // hide startGameContainer and show studentImage + all game buttons
                // showAnswBtnsWhenStart();

                answContainer.addEventListener('click', (e) => {

                    if(totalGuesses > chosenStudents.length-1){

                        // gameOn = false;
                        //avsluta spel
                        console.log(`totalguesses of: ${totalGuesses} is reached`)


                    }  else if(e.target.innerHTML === chosenStudents[0].name) { //
                        // det r√§cker inte med innerHTML om man vill undvika dubbletter
                        // kan antingen ge gissad student guessedOn =true och 
                        // filtrera ut resterande false, eller bara se till att inte dublettnamn
                        // kommer(och d√§rmed √§nd√• inte kan klickas), vilket jag √§r tvungen att g√∂ra √§nd√•.
                        console.log("You clicked the right name")
                        // chosenStudents.shift()
                        rightGuesses ++;
                        totalGuesses ++; //beh√∂ver ej egentligen r√§kna dessa utan bara ta 
                                        //     chosenStudents.length f√∂r att veta hur m√•nga gissningar 
                                        //     det blir, men vet ej hur jag ska f√• chosenStudents utanf√∂r scopet
                        // skriv ut p√• n√•got s√§tt att det √§r r√§tt svar:
                        // kan kanske bara skriva i ett htmlEl under bilden 
                        // s√• det inte blir b√∂kigt
                        setUpNewGuess();
                        // // hide startGameContainer and show studentImage + all game buttons
                        showAnswBtnsWhenStart();

                    } else if(e.target.innerHTML !== chosenStudents[0].name){
                        console.log("Clicked wrong name")
                        // chosenStudents.shift()
                        totalGuesses ++;
                        // visa p√• ngt s√§tt att det var fel och skriv ut r√§tt svar 
                        // r√§tt svar:
                    
                        setUpNewGuess();
                        // hide startGameContainer and show studentImage + all game buttons
                        showAnswBtnsWhenStart();

                    } else if(e.target.innerHTML === 'Quit Game üòæ'){
                        console.log("Y U quit game?")                        
                        rightGuesses = 0;
                        totalGuesses = 0;
                        // gameOn = false;
                        // quitGame = true;
                        clickToChooseAmountOfStudents();
                    }
                }); 
            // });
        // } 
    // }
}


// hur kan jag f√• med det valda v√§rdet ovan ut ur scopet i 
// variabeln chosenStudents och anv√§nda det? 
// tror jag har det nu iom funktionen. F√∂r i konsolen
// s√• ser jag mitt valda v√§rde n√§r jag skriver in chosenStudents
// console.log(chosenStudents); // hinner ej klicka p√• knapparna 
// innan denna skrivs ut i konsolen som undefined




// Hur kan jag f√• spelet att k√∂ra 
// om och om igen igenom valt antal elever?
// n√•got med while(gameOn && totalGuesses <= chosenStudents.length)
// kanske? (se while-loopen ovan)

//how to write total score: `you've got ${rightGuesses}/${totalGuesses} right!`
// make an htmlEl to print this in

// EXTRAPILL vid r√§tt och fel svar, om jag hinner:

    // // timer. fixa med denna n√§r spelet funkar n√•golunda
        // setTimeout(() => {
    //     // g√∂r knappen gr√∂n i 2 sek och ta bort de andra namnen
    //          answBtn[r√§tt].classList.add(g√∂r css-style gr√∂n f√§rg);
    //          answBtn[alla som √§r fel].style('display', 'hidden');
    // }, 2000);
    // // Setting the first chosen image and starting game

 // setTimeout(() => {
    //     //visar valt svar som en r√∂d knapp i 2 sek
    //     answBtn[felVal].classList.add(g√∂r en css-style med r√∂d f√§rg);               
        //            // timer
        //            setTimeout(() => {
    //                 //visar r√§tt svar som en gr√∂n knapp i 4 sek samtidigt som de andra knapparna f√∂rsvinner
    //                 answBtn[r√§ttVal].classList.add(css-style med gr√∂n f√§rg);
    //                 answBtn[felVal].style('display', 'hidden');
    //                     answBtn[alla som √§r fel].style('display', 'block')
    //            }, 2000);
    // }, 2000);
    // Setting the first chosen image and starting game